# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import thirdeye_client
from thirdeye_client.api.root_cause_analysis_api import RootCauseAnalysisApi  # noqa: E501
from thirdeye_client.rest import ApiException


class TestRootCauseAnalysisApi(unittest.TestCase):
    """RootCauseAnalysisApi unit test stubs"""

    def setUp(self):
        self.api = thirdeye_client.api.root_cause_analysis_api.RootCauseAnalysisApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_count_with_predicate8(self):
        """Test case for count_with_predicate8

        """
        pass

    def test_create_multiple8(self):
        """Test case for create_multiple8

        """
        pass

    def test_data_cube_summary(self):
        """Test case for data_cube_summary

        Retrieve the likely root causes behind an anomaly  # noqa: E501
        """
        pass

    def test_delete8(self):
        """Test case for delete8

        """
        pass

    def test_delete_all8(self):
        """Test case for delete_all8

        """
        pass

    def test_edit_multiple8(self):
        """Test case for edit_multiple8

        """
        pass

    def test_generate_cohorts(self):
        """Test case for generate_cohorts

        Builds cohorts based on threshold  # noqa: E501
        """
        pass

    def test_get17(self):
        """Test case for get17

        """
        pass

    def test_get18(self):
        """Test case for get18

        """
        pass

    def test_get_all8(self):
        """Test case for get_all8

        """
        pass

    def test_get_anomalies_events(self):
        """Test case for get_anomalies_events

        Returns anomalies related to the anomaly. Anomalies are ordered by the scoring function.  # noqa: E501
        """
        pass

    def test_get_anomaly_heatmap(self):
        """Test case for get_anomaly_heatmap

        Returns heatmap for the specified anomaly.  Aligns time stamps if necessary and omits null values.  # noqa: E501
        """
        pass

    def test_get_calendar_events(self):
        """Test case for get_calendar_events

        Returns calendar events related to the anomaly. Events are ordered by the scoring function.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
