# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import thirdeye_client
from thirdeye_client.api.data_source_api import DataSourceApi  # noqa: E501
from thirdeye_client.rest import ApiException


class TestDataSourceApi(unittest.TestCase):
    """DataSourceApi unit test stubs"""

    def setUp(self):
        self.api = thirdeye_client.api.data_source_api.DataSourceApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_clear_data_source_cache(self):
        """Test case for clear_data_source_cache

        """
        pass

    def test_count_with_predicate(self):
        """Test case for count_with_predicate

        """
        pass

    def test_create_multiple(self):
        """Test case for create_multiple

        """
        pass

    def test_delete(self):
        """Test case for delete

        """
        pass

    def test_delete_all(self):
        """Test case for delete_all

        """
        pass

    def test_edit_multiple(self):
        """Test case for edit_multiple

        """
        pass

    def test_get1(self):
        """Test case for get1

        """
        pass

    def test_get2(self):
        """Test case for get2

        """
        pass

    def test_get_all(self):
        """Test case for get_all

        """
        pass

    def test_get_datasets(self):
        """Test case for get_datasets

        """
        pass

    def test_offboard_all(self):
        """Test case for offboard_all

        """
        pass

    def test_onboard_all(self):
        """Test case for onboard_all

        """
        pass

    def test_onboard_dataset(self):
        """Test case for onboard_dataset

        """
        pass

    def test_validate(self):
        """Test case for validate

        """
        pass


if __name__ == '__main__':
    unittest.main()
