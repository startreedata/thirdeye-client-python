# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from thirdeye_client.configuration import Configuration


class DatasetApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'active': 'bool',
        'additive': 'bool',
        'dimensions': 'TemplatableListString',
        'time_column': 'TimeColumnApi',
        'expected_delay': 'Duration',
        'data_source': 'DataSourceApi',
        'completeness_delay': 'str',
        'rca_excluded_dimensions': 'TemplatableListString'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'active': 'active',
        'additive': 'additive',
        'dimensions': 'dimensions',
        'time_column': 'timeColumn',
        'expected_delay': 'expectedDelay',
        'data_source': 'dataSource',
        'completeness_delay': 'completenessDelay',
        'rca_excluded_dimensions': 'rcaExcludedDimensions'
    }

    def __init__(self, id=None, name=None, active=None, additive=None, dimensions=None, time_column=None, expected_delay=None, data_source=None, completeness_delay=None, rca_excluded_dimensions=None, _configuration=None):  # noqa: E501
        """DatasetApi - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._name = None
        self._active = None
        self._additive = None
        self._dimensions = None
        self._time_column = None
        self._expected_delay = None
        self._data_source = None
        self._completeness_delay = None
        self._rca_excluded_dimensions = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if active is not None:
            self.active = active
        if additive is not None:
            self.additive = additive
        if dimensions is not None:
            self.dimensions = dimensions
        if time_column is not None:
            self.time_column = time_column
        if expected_delay is not None:
            self.expected_delay = expected_delay
        if data_source is not None:
            self.data_source = data_source
        if completeness_delay is not None:
            self.completeness_delay = completeness_delay
        if rca_excluded_dimensions is not None:
            self.rca_excluded_dimensions = rca_excluded_dimensions

    @property
    def id(self):
        """Gets the id of this DatasetApi.  # noqa: E501


        :return: The id of this DatasetApi.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DatasetApi.


        :param id: The id of this DatasetApi.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this DatasetApi.  # noqa: E501


        :return: The name of this DatasetApi.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DatasetApi.


        :param name: The name of this DatasetApi.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def active(self):
        """Gets the active of this DatasetApi.  # noqa: E501


        :return: The active of this DatasetApi.  # noqa: E501
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this DatasetApi.


        :param active: The active of this DatasetApi.  # noqa: E501
        :type: bool
        """

        self._active = active

    @property
    def additive(self):
        """Gets the additive of this DatasetApi.  # noqa: E501


        :return: The additive of this DatasetApi.  # noqa: E501
        :rtype: bool
        """
        return self._additive

    @additive.setter
    def additive(self, additive):
        """Sets the additive of this DatasetApi.


        :param additive: The additive of this DatasetApi.  # noqa: E501
        :type: bool
        """

        self._additive = additive

    @property
    def dimensions(self):
        """Gets the dimensions of this DatasetApi.  # noqa: E501


        :return: The dimensions of this DatasetApi.  # noqa: E501
        :rtype: TemplatableListString
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this DatasetApi.


        :param dimensions: The dimensions of this DatasetApi.  # noqa: E501
        :type: TemplatableListString
        """

        self._dimensions = dimensions

    @property
    def time_column(self):
        """Gets the time_column of this DatasetApi.  # noqa: E501


        :return: The time_column of this DatasetApi.  # noqa: E501
        :rtype: TimeColumnApi
        """
        return self._time_column

    @time_column.setter
    def time_column(self, time_column):
        """Sets the time_column of this DatasetApi.


        :param time_column: The time_column of this DatasetApi.  # noqa: E501
        :type: TimeColumnApi
        """

        self._time_column = time_column

    @property
    def expected_delay(self):
        """Gets the expected_delay of this DatasetApi.  # noqa: E501


        :return: The expected_delay of this DatasetApi.  # noqa: E501
        :rtype: Duration
        """
        return self._expected_delay

    @expected_delay.setter
    def expected_delay(self, expected_delay):
        """Sets the expected_delay of this DatasetApi.


        :param expected_delay: The expected_delay of this DatasetApi.  # noqa: E501
        :type: Duration
        """

        self._expected_delay = expected_delay

    @property
    def data_source(self):
        """Gets the data_source of this DatasetApi.  # noqa: E501


        :return: The data_source of this DatasetApi.  # noqa: E501
        :rtype: DataSourceApi
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this DatasetApi.


        :param data_source: The data_source of this DatasetApi.  # noqa: E501
        :type: DataSourceApi
        """

        self._data_source = data_source

    @property
    def completeness_delay(self):
        """Gets the completeness_delay of this DatasetApi.  # noqa: E501


        :return: The completeness_delay of this DatasetApi.  # noqa: E501
        :rtype: str
        """
        return self._completeness_delay

    @completeness_delay.setter
    def completeness_delay(self, completeness_delay):
        """Sets the completeness_delay of this DatasetApi.


        :param completeness_delay: The completeness_delay of this DatasetApi.  # noqa: E501
        :type: str
        """

        self._completeness_delay = completeness_delay

    @property
    def rca_excluded_dimensions(self):
        """Gets the rca_excluded_dimensions of this DatasetApi.  # noqa: E501


        :return: The rca_excluded_dimensions of this DatasetApi.  # noqa: E501
        :rtype: TemplatableListString
        """
        return self._rca_excluded_dimensions

    @rca_excluded_dimensions.setter
    def rca_excluded_dimensions(self, rca_excluded_dimensions):
        """Sets the rca_excluded_dimensions of this DatasetApi.


        :param rca_excluded_dimensions: The rca_excluded_dimensions of this DatasetApi.  # noqa: E501
        :type: TemplatableListString
        """

        self._rca_excluded_dimensions = rca_excluded_dimensions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DatasetApi, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DatasetApi):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DatasetApi):
            return True

        return self.to_dict() != other.to_dict()
